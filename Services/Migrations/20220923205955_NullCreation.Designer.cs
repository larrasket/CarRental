// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Services;

#nullable disable

namespace Services.Migrations
{
    [DbContext(typeof(CycleContext))]
    [Migration("20220923205955_NullCreation")]
    partial class NullCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.DataModels.Bill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CreationId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Models.DataModels.ClientUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("UserIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ClientUsers");
                });

            modelBuilder.Entity("Models.DataModels.Creator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Creators");
                });

            modelBuilder.Entity("Models.DataModels.Fine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BillId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreationId")
                        .HasColumnType("bigint");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("CreationId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Fines");
                });

            modelBuilder.Entity("Models.DataModels.Maintenance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BillId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreationId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("CreationId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("Models.DataModels.Rent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BillId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Driver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("RentEnd")
                        .HasColumnType("date");

                    b.Property<DateOnly>("RentStart")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("CreationId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("Models.DataModels.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("CreationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreationId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Models.DataModels.Bill", b =>
                {
                    b.HasOne("Models.DataModels.Creator", "Creation")
                        .WithMany()
                        .HasForeignKey("CreationId");

                    b.Navigation("Creation");
                });

            modelBuilder.Entity("Models.DataModels.Creator", b =>
                {
                    b.HasOne("Models.DataModels.ClientUser", "User")
                        .WithMany("CreatedThings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.DataModels.Fine", b =>
                {
                    b.HasOne("Models.DataModels.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.DataModels.Creator", "Creation")
                        .WithMany()
                        .HasForeignKey("CreationId");

                    b.HasOne("Models.DataModels.Vehicle", "Vehicle")
                        .WithMany("Fines")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Creation");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Models.DataModels.Maintenance", b =>
                {
                    b.HasOne("Models.DataModels.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.DataModels.Creator", "Creation")
                        .WithMany()
                        .HasForeignKey("CreationId");

                    b.HasOne("Models.DataModels.Vehicle", "Vehicle")
                        .WithMany("Maintenances")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Creation");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Models.DataModels.Rent", b =>
                {
                    b.HasOne("Models.DataModels.Bill", "Contract")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.DataModels.Creator", "Creation")
                        .WithMany()
                        .HasForeignKey("CreationId");

                    b.HasOne("Models.DataModels.Vehicle", "Vehicle")
                        .WithMany("Rents")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("Creation");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Models.DataModels.Vehicle", b =>
                {
                    b.HasOne("Models.DataModels.Creator", "Creation")
                        .WithMany()
                        .HasForeignKey("CreationId");

                    b.Navigation("Creation");
                });

            modelBuilder.Entity("Models.DataModels.ClientUser", b =>
                {
                    b.Navigation("CreatedThings");
                });

            modelBuilder.Entity("Models.DataModels.Vehicle", b =>
                {
                    b.Navigation("Fines");

                    b.Navigation("Maintenances");

                    b.Navigation("Rents");
                });
#pragma warning restore 612, 618
        }
    }
}
